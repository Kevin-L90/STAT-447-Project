mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
}
}
# return(TRUE)
#}
inc[[Moderna-NIH]] * (1 - eff[[Moderna-NIH]])
inc[["Moderna-NIH"]] * (1 - eff[["Moderna-NIH"]])
inc[["Moderna-NIH"]]
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
#model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, (inc[[vaccine]] * (1 - eff[[vaccine]]))))
}
}
# return(TRUE)
#}
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, (inc[[vaccine]] * (1 - eff[[vaccine]]))))
}
}
return(TRUE)
}
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, (inc[[vaccine]] * (1 - eff[[vaccine]]))))
}
}
return(TRUE)
}
# this is where your R code goes
data = read.csv("vaccines.csv")
data$groupSizes = as.double(data$groupSizes) # needed due to bug in Binom code
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, eff[[vaccine]]))
}
}
return(TRUE)
}
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]]))
}
}
return(TRUE)
}
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
print(prob)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]]))
}
}
return(e[["Moderna-NIH"]] > e[["Pfizer-BioNTech"]])
}
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]]))
}
}
return(eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]])
}
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
print(prob)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
#model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]]))
}
}
# return(eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]])
#}
observe(cases, observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]]))))
observe(cases, Binom(size, inc[[vaccine]]))
(1 - eff[[vaccine]])
inc[[vaccine]]
inc[[vaccine]] * (1 - eff[[vaccine]]
)
observe(cases, observe(cases, Binom(size, 0.01418681)))
observe(cases, observe(cases, Binom(size, 0.1427253)))
observe(cases, observe(cases, Binom(size, prob = 0.01418681)))
observe(cases, observe(cases, Binom(size = size, prob = 0.01418681)))
observe(cases, observe(cases, Binom(size, prob = 0.01418681)))
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]]))))
}
}
return(eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]])
}
observe(cases, Binom(size, inc[[vaccine]]))
observe(cases, observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]]))))
Binom(size, inc[[vaccine]])
Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]]))
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
}
}
return(eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]])
}
# this is where your R code goes
data = read.csv("vaccines.csv")
data$groupSizes = as.double(data$groupSizes) # needed due to bug in Binom code
# this is where your R code goes
data = read.csv("vaccines.csv")
data$groupSizes = as.double(data$groupSizes) # needed due to bug in Binom code
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
}
}
return(eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]])
}
# this is where your R code goes
data = read.csv("vaccines.csv")
data$groupSizes = as.double(data$groupSizes) # needed due to bug in Binom code
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
}
}
eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]]
}
# this is where your R code goes
data = read.csv("vaccines.csv")
data$groupSizes = as.double(data$groupSizes) # needed due to bug in Binom code
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
}
eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]]
}
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
print(prob)
# this is where your R code goes
source("../../simple.R")
BetaMP = function(mean, precision){
Beta(mean*precision, (1-mean)*precision)
}
model = function() {
mu_e = simulate(Unif(0,1))
lambda_e = simulate(Exp(0.01))
mu_p = simulate(BetaMP(0.1, 15))
lambda_p = simulate(Exp(0.01))
eff = list()
inc = list()
eff[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Pfizer-BioNTech"]] = simulate(BetaMP(mu_p, lambda_p))
eff[["Moderna-NIH"]] = simulate(BetaMP(mu_e, lambda_e))
inc[["Moderna-NIH"]] = simulate(BetaMP(mu_p, lambda_p))
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
}
}
eff[["Moderna-NIH"]] > eff[["Pfizer-BioNTech"]]
}
# this is where your R code goes
set.seed(1)
prob = posterior(model, 10000)
print(prob)
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
}
}
for (i in seq_along(data)) {
vaccine = data$trials[i]
arm = data$arms[i]
size = data$groupSizes[i]
cases = data$numbersOfCases[i]
if (arm == "control") {
observe(cases, Binom(size, inc[[vaccine]]))
} else {
observe(cases, Binom(size, inc[[vaccine]] * (1 - eff[[vaccine]])))
}
}
