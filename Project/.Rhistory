summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
data = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC) %>%
summarise(count = n())
simple_data = list(
N = nrow(data),
y = data$count,
x = data$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
crime_data$Predicted <- y_pred_mean
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
data$Predicted <- y_pred_mean
# Plot
library(ggplot2)
ggplot(data, aes(x = Year)) +
geom_point(aes(y = Count), color = "black") +
geom_line(aes(y = Predicted), color = "blue") +
labs(title = "Bayesian Poisson Fit (rstan): Commercial Break & Enter",
y = "Observed vs Predicted Counts")
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
data$Predicted <- y_pred_mean
# Plot
library(ggplot2)
ggplot(data, aes(x = Year)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = Predicted), color = "blue") +
labs(title = "Bayesian Poisson Fit (rstan): Commercial Break & Enter",
y = "Observed vs Predicted Counts")
data = crime_data %>%
summarise(YEARC = YEAR - mean(YEAR),
YEAR = as.integer(YEAR)) %>%
group_by(YEARC) %>%
summarise(count = n())
simple_data = list(
N = nrow(data),
y = data$count,
x = data$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
data = crime_data %>%
summarise(YEARC = YEAR - mean(YEAR),
YEAR = as.integer(YEAR)) %>%
group_by(YEARC) %>%
summarise(count = n())
simple_data = list(
N = nrow(data),
y = data$count,
x = data$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
data = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC) %>%
summarise(count = n())
simple_data = list(
N = nrow(data),
y = data$count,
x = data$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
data = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(data),
y = data$count,
x = data$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
View(data)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
data$Predicted <- y_pred_mean
# Plot
library(ggplot2)
ggplot(data, aes(x = Year)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = Predicted), color = "blue") +
labs(title = "Bayesian Poisson Fit (rstan): Commercial Break & Enter",
y = "Observed vs Predicted Counts")
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
data$Predicted <- y_pred_mean
# Plot
library(ggplot2)
ggplot(data, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = Predicted), color = "blue") +
labs(title = "Bayesian Poisson Fit (rstan): Commercial Break & Enter",
y = "Observed vs Predicted Counts")
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
data$pred <- y_pred_mean
# Plot
library(ggplot2)
ggplot(data, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
knitr::opts_chunk$set(echo = TRUE)
#if you do not have the package, type install.packages("name_of_the_package")
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstan)
crime_data = read.csv("crime_data/crime_data.csv")
head(crime_data)
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
data = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(data),
y = data$count,
x = data$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
data$pred <- y_pred_mean
# Plot
library(ggplot2)
ggplot(data, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
knitr::opts_chunk$set(echo = TRUE)
#if you do not have the package, type install.packages("name_of_the_package")
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstan)
crime_data = read.csv("crime_data/crime_data.csv")
head(crime_data)
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
simple = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(simple),
y = simple$count,
x = simple$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
y_pred_mean = colMeans(posterior$y_pred)
simple$pred <- y_pred_mean
ggplot(simple, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
improved = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
improved$YEARC2 = improved$YEARC^2
improved_data = list(
N = nrow(improved),
y = improved$count,
x = improved$YEARC,
x2 = improved$YEARC2
)
fit = stan(
file = "improved.stan",
data = improved_data
)
improved = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
improved$YEARC2 = improved$YEARC^2
improved_data = list(
N = nrow(improved),
y = improved$count,
x = improved$YEARC,
x2 = improved$YEARC2
)
fit = stan(
file = "improved.stan",
data = improved_data
)
improved = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
improved$YEARC2 = improved$YEARC^2
improved_data = list(
N = nrow(improved),
y = improved$count,
x = improved$YEARC,
x2 = improved$YEARC2
)
fit = stan(
file = "improved.stan",
data = improved_data
)
print(fit, pars = c("alpha", "beta1", "beta2"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
simple$pred = colMeans(posterior$y_pred)
posterior = extract(fit)
improved$pred = colMeans(posterior$mu)
ggplot(improved, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = mu), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
posterior = extract(fit)
improved$pred = colMeans(posterior$mu)
ggplot(improved, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
knitr::opts_chunk$set(echo = TRUE)
#if you do not have the package, type install.packages("name_of_the_package")
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstan)
set.seed(1)
crime_data = read.csv("crime_data/crime_data.csv")
head(crime_data)
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
simple = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(simple),
y = simple$count,
x = simple$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
simple$pred = colMeans(posterior$y_pred)
colMeans(posterior$y_pred)
colMeans(posterior)
?colMeans
simple = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(simple),
y = simple$count,
x = simple$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data
)
simple = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(simple),
y = simple$count,
x = simple$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data,
seed = 1
)
posterior = extract(fit)
simple$pred = colMeans(posterior$y_pred)
ggplot(simple, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
knitr::opts_chunk$set(echo = TRUE)
#if you do not have the package, type install.packages("name_of_the_package")
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstan)
set.seed(1)
crime_data = read.csv("crime_data/crime_data.csv")
head(crime_data)
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
simple = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(simple),
y = simple$count,
x = simple$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data,
seed = 1
)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
simple$pred = colMeans(posterior$y_pred)
ggplot(simple, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
improved = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
improved$YEARC2 = improved$YEARC^2
improved_data = list(
N = nrow(improved),
y = improved$count,
x = improved$YEARC,
x2 = improved$YEARC2
)
fit = stan(
file = "improved.stan",
data = improved_data,
seed = 1
)
knitr::opts_chunk$set(echo = TRUE)
#if you do not have the package, type install.packages("name_of_the_package")
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstan)
set.seed(1)
crime_data = read.csv("crime_data/crime_data.csv")
head(crime_data)
crime_data = crime_data %>%
filter(!is.na(YEAR)) %>%
filter(YEAR != 2025) %>%
filter(TYPE == "Break and Enter Commercial")
crime_data %>%
summarise(YEAR = as.integer(YEAR)) %>%
group_by(YEAR) %>%
summarise(count = n()) %>%
ggplot() +
geom_line(aes(x = YEAR, y = count)) +
labs(x = "Year", y = "Incidents", title = "Line plot of Annual Commercial Break and Enters")
simple = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
simple_data = list(
N = nrow(simple),
y = simple$count,
x = simple$YEARC
)
fit = stan(
file = "simple.stan",
data = simple_data,
seed = 1
)
print(fit, pars = c("alpha", "beta"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
simple$pred = colMeans(posterior$y_pred)
ggplot(simple, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
improved = crime_data %>%
summarise(YEAR = as.integer(YEAR),
YEARC = YEAR - mean(YEAR)) %>%
group_by(YEARC, YEAR) %>%
summarise(count = n())
improved$YEARC2 = improved$YEARC^2
improved_data = list(
N = nrow(improved),
y = improved$count,
x = improved$YEARC,
x2 = improved$YEARC2
)
fit = stan(
file = "improved.stan",
data = improved_data,
seed = 1
)
print(fit, pars = c("alpha", "beta1", "beta2"), probs = c(0.025, 0.5, 0.975))
posterior = extract(fit)
improved$pred = colMeans(posterior$mu)
ggplot(improved, aes(x = YEAR)) +
geom_point(aes(y = count), color = "black") +
geom_line(aes(y = pred), color = "blue") +
labs(title = "Bayesian Poisson Fit for Commercial Break & Enter",
y = "Counts")
